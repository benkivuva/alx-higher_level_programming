>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test cases

# Test case 1: Dividing a 2x2 matrix by 2
>>> matrix = [[1, 2], [3, 4]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0], [1.5, 2.0]]

# Test case 2: Dividing a 3x3 matrix by 3
>>> matrix = [[6, 12, 18], [24, 30, 36], [42, 48, 54]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0], [14.0, 16.0, 18.0]]

# Test case 3: Dividing a 4x4 matrix by 4
>>> matrix = [[0, 8, 16, 24], [32, 40, 48, 56], [64, 72, 80, 88], [96, 104, 112, 120]]
>>> div = 4
>>> matrix_divided(matrix, div)
[[0.0, 2.0, 4.0, 6.0], [8.0, 10.0, 12.0, 14.0], [16.0, 18.0, 20.0, 22.0], [24.0, 26.0, 28.0, 30.0]]

# Test case 4: Dividing a 3x2 matrix by 2.5
>>> matrix = [[1.5, 2.5], [3.5, 4.5], [5.5, 6.5]]
>>> div = 2.5
>>> matrix_divided(matrix, div)
[[0.6, 1.0], [1.4, 1.8], [2.2, 2.6]]

# Test case 5: Dividing a 1x1 matrix by 0 (ZeroDivisionError)
>>> matrix = [[7]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

# Test case 6: Matrix with non-integer/float elements (TypeError)
>>> matrix = [[1, 2], [3, '4']]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 7: Matrix with rows of different sizes (TypeError)
>>> matrix = [[1, 2], [3, 4, 5]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Test case 8: Matrix is not a list of lists (TypeError)
>>> matrix = [1, 2, 3]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test case 9: Division with negative numbers
>>> matrix = [[-10, 20], [-30, 40]]
>>> div = -5
>>> matrix_divided(matrix, div)
[[2.0, -4.0], [6.0, -8.0]]
